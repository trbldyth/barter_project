openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/v1/users/:
    get:
      operationId: listUsers
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDetailSerialzier'
          description: ''
      tags:
      - api
    post:
      operationId: createUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDetailSerialzier'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDetailSerialzier'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserDetailSerialzier'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetailSerialzier'
          description: ''
      tags:
      - api
  /api/v1/users/{id}/:
    get:
      operationId: retrieveUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetailSerialzier'
          description: ''
      tags:
      - api
    put:
      operationId: updateUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDetailSerialzier'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDetailSerialzier'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserDetailSerialzier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetailSerialzier'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDetailSerialzier'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDetailSerialzier'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserDetailSerialzier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetailSerialzier'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/exchanges/{exchange}/:
    get:
      operationId: pendingExchangesExchangeList
      description: ''
      parameters:
      - name: exchange
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExchangeList'
          description: ''
      tags:
      - api
    put:
      operationId: pendingExchangesExchangeList
      description: ''
      parameters:
      - name: exchange
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExchangeList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExchangeList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExchangeList'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExchangeList'
          description: ''
      tags:
      - api
  /api/v1/ads/:
    get:
      operationId: listAds
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: category__slug
        required: false
        in: query
        description: category__slug
        schema:
          type: string
      - name: condition__slug
        required: false
        in: query
        description: condition__slug
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Ad'
          description: ''
      tags:
      - api
    post:
      operationId: createAd
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ad'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Ad'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Ad'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ad'
          description: ''
      tags:
      - api
  /api/v1/ads/{id}/:
    get:
      operationId: retrieveAd
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this ad.
        schema:
          type: string
      - name: category__slug
        required: false
        in: query
        description: category__slug
        schema:
          type: string
      - name: condition__slug
        required: false
        in: query
        description: condition__slug
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ad'
          description: ''
      tags:
      - api
    put:
      operationId: updateAd
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this ad.
        schema:
          type: string
      - name: category__slug
        required: false
        in: query
        description: category__slug
        schema:
          type: string
      - name: condition__slug
        required: false
        in: query
        description: condition__slug
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ad'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Ad'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Ad'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ad'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateAd
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this ad.
        schema:
          type: string
      - name: category__slug
        required: false
        in: query
        description: category__slug
        schema:
          type: string
      - name: condition__slug
        required: false
        in: query
        description: condition__slug
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ad'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Ad'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Ad'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ad'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyAd
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this ad.
        schema:
          type: string
      - name: category__slug
        required: false
        in: query
        description: category__slug
        schema:
          type: string
      - name: condition__slug
        required: false
        in: query
        description: condition__slug
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/categories/:
    get:
      operationId: listCategorys
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          description: ''
      tags:
      - api
    post:
      operationId: createCategory
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
      tags:
      - api
  /api/v1/categories/{id}/:
    get:
      operationId: retrieveCategory
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this category.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
      tags:
      - api
    put:
      operationId: updateCategory
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this category.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateCategory
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this category.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyCategory
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this category.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/conditions/:
    get:
      operationId: listConditions
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Condition'
          description: ''
      tags:
      - api
    post:
      operationId: createCondition
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Condition'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Condition'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Condition'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Condition'
          description: ''
      tags:
      - api
  /api/v1/conditions/{id}/:
    get:
      operationId: retrieveCondition
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this condition.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Condition'
          description: ''
      tags:
      - api
    put:
      operationId: updateCondition
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this condition.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Condition'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Condition'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Condition'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Condition'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateCondition
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this condition.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Condition'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Condition'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Condition'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Condition'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyCondition
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this condition.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/exchanges/:
    get:
      operationId: listExchangeProposals
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExchangeList'
          description: ''
      tags:
      - api
    post:
      operationId: createExchangeProposal
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExchangeList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExchangeList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExchangeList'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExchangeList'
          description: ''
      tags:
      - api
  /api/v1/exchanges/received/:
    get:
      operationId: receivedExchangeExchangeProposal
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExchangeList'
          description: ''
      tags:
      - api
  /api/v1/exchanges/sended/:
    get:
      operationId: sendedExchangeExchangeProposal
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExchangeList'
          description: ''
      tags:
      - api
  /api/v1/exchanges/{id}/:
    get:
      operationId: retrieveExchangeProposal
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this exchange proposal.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExchangeList'
          description: ''
      tags:
      - api
    put:
      operationId: updateExchangeProposal
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this exchange proposal.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExchangeList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExchangeList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExchangeList'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExchangeList'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateExchangeProposal
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this exchange proposal.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExchangeList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExchangeList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExchangeList'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExchangeList'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyExchangeProposal
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this exchange proposal.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/users/login/:
    post:
      operationId: loginUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
  /api/v1/users/logout/:
    post:
      operationId: logoutUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDetailSerialzier'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDetailSerialzier'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserDetailSerialzier'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetailSerialzier'
          description: ''
      tags:
      - api
  /api/v1/users/signup/:
    post:
      operationId: signupUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreation'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreation'
          description: ''
      tags:
      - api
  /api/v1/propose/{user_id}/:
    post:
      operationId: proposeExchangeExchangeList
      description: ''
      parameters:
      - name: user_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExchangeList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExchangeList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExchangeList'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExchangeList'
          description: ''
      tags:
      - api
components:
  schemas:
    UserDetailSerialzier:
      type: object
      properties:
        username:
          type: string
          readOnly: true
    ExchangeList:
      type: object
      properties:
        sender_ad_id:
          type: string
          readOnly: true
        sender_ad_title:
          type: string
          readOnly: true
        sender_ad_user:
          type: string
          readOnly: true
        sender_ad_description:
          type: string
          readOnly: true
        sender_ad_condition:
          type: string
          readOnly: true
        sender_ad_category:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              title:
                type: string
                maxLength: 32
              slug:
                type: string
                maxLength: 50
                pattern: ^[-a-zA-Z0-9_]+$
            required:
            - title
            - slug
          readOnly: true
        sender_ad_image_url:
          type: string
          format: binary
          readOnly: true
        receiver_ad_id:
          type: string
          readOnly: true
        receiver_ad_title:
          type: string
          readOnly: true
        receiver_ad_user:
          type: string
          readOnly: true
        receiver_ad_description:
          type: string
          readOnly: true
        receiver_ad_condition:
          type: string
          readOnly: true
        receiver_ad_category:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              title:
                type: string
                maxLength: 32
              slug:
                type: string
                maxLength: 50
                pattern: ^[-a-zA-Z0-9_]+$
            required:
            - title
            - slug
          readOnly: true
        receiver_ad_image_url:
          type: string
          format: binary
          readOnly: true
        comment:
          type: string
          readOnly: true
        status:
          enum:
          - accepted
          - rejected
          - pending
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
    Ad:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: string
          readOnly: true
        title:
          type: string
          maxLength: 64
        description:
          type: string
          maxLength: 512
        image_url:
          type: string
          format: binary
          nullable: true
        category:
          type: array
          items:
            type: integer
        condition:
          type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - title
      - description
      - image_url
      - category
      - condition
    Category:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 32
        slug:
          type: string
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
      required:
      - title
      - slug
    Condition:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 32
        slug:
          type: string
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
      required:
      - title
      - slug
    User:
      type: object
      properties:
        username:
          type: string
          maxLength: 64
        password:
          type: string
          maxLength: 128
      required:
      - username
      - password
    UserCreation:
      type: object
      properties:
        username:
          type: string
          maxLength: 64
        password:
          type: string
          maxLength: 128
        password_verify:
          type: string
      required:
      - username
      - password
      - password_verify
